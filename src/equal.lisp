(in-package :optima)

(defun %equal (a b)
  (declare (optimize (speed 3) (safety 0) (space 0)))
  (or (equal a b)
      (cond ((and (stringp a) (stringp b))
             (string= a b))
            ((and (consp a) (consp b))
             (and (%equal (car a) (car b))
                  (%equal (cdr a) (cdr b)))))))

(defmacro equals (var value)
  (cond ((null value) `(null ,var))
        ((symbolp value) `(eq ,var ',value))
        ((literalp value) `(eql ,var ,value))
        ((consp value) `(%equal ,var ',value))
        (t `(%equal ,var ,value))))
